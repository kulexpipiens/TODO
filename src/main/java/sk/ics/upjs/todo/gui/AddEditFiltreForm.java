package sk.ics.upjs.todo.gui;

import java.awt.Color;
import java.awt.Frame;
import java.util.Date;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;
import static javax.swing.JOptionPane.INFORMATION_MESSAGE;
import net.sourceforge.jdatepicker.impl.JDatePanelImpl;
import net.sourceforge.jdatepicker.impl.JDatePickerImpl;
import net.sourceforge.jdatepicker.impl.UtilDateModel;
import sk.ics.upjs.todo.dao.Factory;
import sk.ics.upjs.todo.dao.FilterDao;
import sk.ics.upjs.todo.dao.KategoriaDao;
import sk.ics.upjs.todo.entity.Filter;
import sk.ics.upjs.todo.entity.Kategoria;

public class AddEditFiltreForm extends javax.swing.JDialog {

    private static final FilterDao filterDao = Factory.INSTANCE.filterDao();
    private static final KategoriaDao kategoriaDao = Factory.INSTANCE.kategoriaDao();
    private Filter filter;
    private static final ComboBoxModel comboBoxModel = Factory.INSTANCE.getKategoryCmbModel();
    private boolean add = false;

    private JDatePickerImpl datePickerOd;
    private JDatePickerImpl datePickerDo;

    public AddEditFiltreForm(Frame parent) {
        this(new Filter(), parent);
        this.add = true;
    }

    public AddEditFiltreForm(Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        GuiFactory.INSTANCE.centruj(this);
    }

    public AddEditFiltreForm(Filter vybranyFilter, Frame parent) {
        this(parent, true);

        UtilDateModel modelOd = new UtilDateModel();
        JDatePanelImpl datePanelOd = new JDatePanelImpl(modelOd);
        datePickerOd = new JDatePickerImpl(datePanelOd);
        Color background = new Color(255, 255, 204);
        datePickerOd.setBackground(background);
        panelOd.add(datePickerOd);

        UtilDateModel modelDo = new UtilDateModel();
        JDatePanelImpl datePanelDo = new JDatePanelImpl(modelDo);
        datePickerDo = new JDatePickerImpl(datePanelDo);
        datePickerDo.setBackground(background);
        panelDo.add(datePickerDo);

        this.setTitle("Menežovanie filtrov");
        this.filter = vybranyFilter;
        if (filter.getKategoria() != null) {
            cmbKategoria.setSelectedItem(filter.getKategoria().getNazov());
        } else {
            cmbKategoria.setSelectedItem(" ");
        }

        cmbPriorita.setSelectedItem(filter.getPriorita());
        if (!this.add) {
            if (filter.isStav() == false) {
                cmbStav.setSelectedItem("Nesplnená");
            } else {
                cmbStav.setSelectedItem("Splnená");
            }
        } else {
            cmbStav.setSelectedItem(" ");

        }
        txtNazov.setText(filter.getNazov());
        if (filter.getDatumOd() != null) {
            Date datum = filter.getDatumOd();
            int den = datum.getDate();
            int mesiac = datum.getMonth();
            int rok = datum.getYear() + 1900;

            datePickerOd.getModel().setDate(rok, mesiac, den);
            datePickerOd.getModel().setSelected(true);
        }
        if (filter.getDatumDo() != null) {
            Date datum = filter.getDatumDo();
            int den = datum.getDate();
            int mesiac = datum.getMonth();
            int rok = datum.getYear() + 1900;

            datePickerDo.getModel().setDate(rok, mesiac, den);
            datePickerDo.getModel().setSelected(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblZnacka = new javax.swing.JLabel();
        lblKategoria = new javax.swing.JLabel();
        lblPriorita = new javax.swing.JLabel();
        lblStav = new javax.swing.JLabel();
        lblDatumOd = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNazov = new javax.swing.JTextField();
        lblDatumDo = new javax.swing.JLabel();
        cmbKategoria = new javax.swing.JComboBox();
        cmbStav = new javax.swing.JComboBox();
        cmbPriorita = new javax.swing.JComboBox();
        panelDo = new javax.swing.JPanel();
        panelOd = new javax.swing.JPanel();
        lblPozadie = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 220));
        setResizable(false);
        getContentPane().setLayout(null);

        lblZnacka.setBackground(new java.awt.Color(204, 153, 255));
        lblZnacka.setFont(new java.awt.Font("Gungsuh", 0, 36)); // NOI18N
        lblZnacka.setText("dori");
        getContentPane().add(lblZnacka);
        lblZnacka.setBounds(390, 140, 70, 43);

        lblKategoria.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        lblKategoria.setText("kategória");
        getContentPane().add(lblKategoria);
        lblKategoria.setBounds(10, 49, 53, 14);

        lblPriorita.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        lblPriorita.setText("priorita");
        getContentPane().add(lblPriorita);
        lblPriorita.setBounds(20, 84, 41, 14);

        lblStav.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        lblStav.setText("stav");
        getContentPane().add(lblStav);
        lblStav.setBounds(41, 124, 24, 14);

        lblDatumOd.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        lblDatumOd.setText("dátum od");
        getContentPane().add(lblDatumOd);
        lblDatumOd.setBounds(220, 20, 54, 14);

        btnOK.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });
        getContentPane().add(btnOK);
        btnOK.setBounds(398, 80, 28, 26);

        jLabel1.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("názov");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(10, 17, 59, 14);

        txtNazov.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.background"));
        txtNazov.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        getContentPane().add(txtNazov);
        txtNazov.setBounds(87, 11, 120, 30);

        lblDatumDo.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        lblDatumDo.setText("dátum do");
        getContentPane().add(lblDatumDo);
        lblDatumDo.setBounds(220, 50, 54, 14);

        cmbKategoria.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        cmbKategoria.setModel(comboBoxModel);
        getContentPane().add(cmbKategoria);
        cmbKategoria.setBounds(87, 47, 120, 24);

        cmbStav.setFont(new java.awt.Font("Gungsuh", 0, 11)); // NOI18N
        cmbStav.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Splnená", "Nesplnená" }));
        getContentPane().add(cmbStav);
        cmbStav.setBounds(87, 121, 120, 24);

        cmbPriorita.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " ", "Nízka", "Stredná", "Vysoká" }));
        getContentPane().add(cmbPriorita);
        cmbPriorita.setBounds(87, 83, 120, 25);

        panelDo.setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().add(panelDo);
        panelDo.setBounds(280, 40, 200, 30);

        panelOd.setBackground(new java.awt.Color(255, 255, 204));
        getContentPane().add(panelOd);
        panelOd.setBounds(280, 10, 200, 30);

        lblPozadie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/addeditfiltreform.jpg"))); // NOI18N
        getContentPane().add(lblPozadie);
        lblPozadie.setBounds(0, 0, 500, 190);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        if (nepraznaKategoria()) {
            List<Kategoria> vsetkyKategorie = kategoriaDao.dajVsetky();
            String nazovKat = cmbKategoria.getSelectedItem().toString();
            Kategoria pridavanaKategoria = null;
            for (Kategoria kategoria : vsetkyKategorie) {
                if (kategoria.getNazov().equals(nazovKat)) {
                    pridavanaKategoria = kategoria;
                }
            }
            Date datumOd = null;
            Date datumDo = null;
            if (!datePickerOd.getJFormattedTextField().getText().isEmpty()) {
                datumOd = (Date) datePickerOd.getModel().getValue();
            }

            if (!datePickerDo.getJFormattedTextField().getText().isEmpty()) {
                datumDo = (Date) datePickerDo.getModel().getValue();
            }
            filter.setNazov(txtNazov.getText().trim());
            filter.setDatumOd(datumOd);
            filter.setDatumDo(datumDo);
            filter.setKategoria(pridavanaKategoria);
            if (cmbPriorita.getSelectedItem() != null) {
                filter.setPriorita(cmbPriorita.getSelectedItem().toString());
            } else {
                filter.setPriorita(" ");
            }
            if (cmbStav.getSelectedItem().toString().equals("Splnená")) {
                filter.setStav(true);
            } else {
                if (cmbStav.getSelectedItem().toString().equals(" ")) {
                    JOptionPane.showMessageDialog(this, "Stav úlohy bude "
                            + "automaticky nastavený na Nesplnená ",
                            "Upozornenie", INFORMATION_MESSAGE);
                }
                filter.setStav(false);
            }
            if (add) {
                filterDao.pridajFilter(filter);
            } else {
                filterDao.upravFilter(filter);
            }
            dispose();
        }
    }//GEN-LAST:event_btnOKActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddEditFiltreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddEditFiltreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddEditFiltreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddEditFiltreForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddEditFiltreForm dialog = new AddEditFiltreForm(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox cmbKategoria;
    private javax.swing.JComboBox cmbPriorita;
    private javax.swing.JComboBox cmbStav;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblDatumDo;
    private javax.swing.JLabel lblDatumOd;
    private javax.swing.JLabel lblKategoria;
    private javax.swing.JLabel lblPozadie;
    private javax.swing.JLabel lblPriorita;
    private javax.swing.JLabel lblStav;
    private javax.swing.JLabel lblZnacka;
    private javax.swing.JPanel panelDo;
    private javax.swing.JPanel panelOd;
    private javax.swing.JTextField txtNazov;
    // End of variables declaration//GEN-END:variables

    private boolean nepraznaKategoria() {
        if (cmbKategoria.getSelectedItem().toString().equals(" ")) {
            JOptionPane.showMessageDialog(this, "Vypln kategoriu!", "Chyba", ERROR_MESSAGE);
            return false;
        }
        return true;
    }

}
